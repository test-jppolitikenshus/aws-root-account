---
name: reusable cd
concurrency:  # avoid concurrent runs on label events, might cause issues on super fast commits  ¯\_(ツ)_/¯
  group: ${{ github.head_ref }}
  cancel-in-progress: true
on:
  workflow_call:
    inputs:
      environment:
        description: Environment to run tests against
        type: string
        required: true
      rootModule:
        description: Terraform Root Module
        type: string
        required: true
jobs:
  apply:
    permissions: write-all
    # strategy:
    #  matrix: "${{ fromJson(needs.detect.outputs.directories) }}"
    #  fail-fast: false
    uses: ./.github/workflows/reusable-apply.yaml
    with:
      environment: ${{ inputs.environment }}
      rootModule: ${{ inputs.rootModule }}
      # moduleRootDirectory: ${{ matrix.directory }}
      # releaseType: ${{ needs.detect.outputs.release-type }}
      # terraformVersion: "1.5.2"
    secrets: inherit
    #  githubToken: ${{ secrets.GITHUB_TOKEN }}
    #  GH_APP_ID: ${{ secrets.GH_APP_ID }}
    #  GH_APP_PEM_FILE: ${{ secrets.GH_APP_PEM_FILE }}
    #  GH_APP_INSTALLATION_ID: ${{ secrets.GH_APP_INSTALLATION_ID }}
    #  s3StateBucket: ${{ secrets.S3_STATE_BUCKET }}
    #  awsRootAccountId: ${{ secrets.AWS_ROOT_ACCOUNT_ID }}
    #  GH_ORG: ${{ secrets.GH_ORG }}
  # comment:
  #  permissions: write-all
  #  needs: [apply]
  #  uses: ./.github/workflows/reusable-comment.yaml
  #  with:
  #    environment: ${{ inputs.environment }}
  #    rootModule: ${{ inputs.rootModule }}
  #  secrets: inherit

  # release:
  #  permissions: write-all
  #  needs: [apply]
  #  uses: ./.github/workflows/reusable-release.yaml
  #  with:
  #    environment: ${{ inputs.environment }}
  #    rootModule: ${{ inputs.rootModule }}
  #  secrets: inherit

  # wiki:
  #   permissions: write-all
  #   needs: [release]
  #   uses: ./.github/workflows/reusable-wiki.yaml
  #   with:
  #     environment: ${{ inputs.environment }}
  #     rootModule: ${{ inputs.rootModule }}
  #   secrets: inherit

  # merge:
  auto-approve-test-apply:
    permissions: write-all
    uses: ./.github/workflows/reusable-auto-approve.yaml
    secrets: inherit
  label:
    needs: [apply]
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Update PR label
        id: update_label
        env:
          # Use a PAT since github anti-loop protections prevents GH_TOKEN from triggering workflow, see: https://github.com/actions/runner/discussions/2084 
          GH_TOKEN: ${{ secrets.GH_AUTO_APPROVE_PAT }}
        run: |-
          if ! gh label list | grep prod-deployed; then  # make sure lables are available
            gh label create test-deployed -c 7057ff -d "Already deployed to test"
            gh label create prod-deployed -c b60205 -d "Already deployed to prod"
          fi
          case "${{ inputs.environment }}" in
            prod)
              gh pr edit ${{ github.event.pull_request.number }} --add-label prod-deployed
              gh pr edit ${{ github.event.pull_request.number }} --remove-label prod
              ;;
            test)
              gh pr edit ${{ github.event.pull_request.number }} --remove-label test
              gh pr edit ${{ github.event.pull_request.number }} --add-label test-deployed
              gh pr edit ${{ github.event.pull_request.number }} --add-label prod
              ;;
            *)
              echo "bad coding - label not found"
              exit 1
          esac
    #  auto-approve-label:
    #  needs: apply
    # permissions: write-all
    # uses: ./.github/workflows/reusable-auto-approve-label.yaml
    # secrets: inherit
