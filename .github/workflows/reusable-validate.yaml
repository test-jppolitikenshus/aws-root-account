name: reusable/validate
on:
  workflow_call:
    secrets:
      GH_APP_ID:
        description: 'GitHub Application ID'
        required: false

      GH_APP_PEM_FILE:
        description: 'GitHub Application private key'
        required: false

      GH_APP_INSTALLATION_ID:
        description: 'GitHub Application Installation Id'
        required: false

      s3StateBucket:
        description: "S3 State Bucket"
        required: true

      awsRootAccountId:
        description: "Root Account ID"
        required: true

    inputs:
      terraformVersion:
        description: 'Defines terraform version to use'
        required: true
        type: string

      moduleRootDirectory:
        description: 'Defines root module directory'
        required: true
        type: string

jobs:
  validate:
    environment: test
    permissions: write-all
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.moduleRootDirectory }}
    steps:
      - name: Terraform-SetupWithCloud
        uses: hashicorp/setup-terraform@a1502cd9e758c50496cc9ac5308c4843bcd56d36 # v3.0.0
        with:
          terraform_version: ${{ inputs.terraformVersion }}

      - name: Checkout
        uses: actions/checkout@v4

      - name: Generate token  # Why ?
        env:
          APP_ID: ${{ secrets.GH_APP_ID }}
          PRIVATE_KEY: ${{ secrets.GH_APP_PEM_FILE }}
        if: ${{ env.APP_ID != null && env.PRIVATE_KEY != null }}
        id: generate_token
        uses: tibdex/github-app-token@3beb63f4bd073e61482598c45c71c1019b59b73a #v.2.1.0
        with:
          app_id: ${{ secrets.GH_APP_ID }}
          private_key: ${{ secrets.GH_APP_PEM_FILE }}

      - name: authenticate to git with app token  # Why ?
        env:
          APP_ID: ${{ secrets.GH_APP_ID }}
          PRIVATE_KEY: ${{ secrets.GH_APP_PEM_FILE }}
        if: ${{ env.APP_ID != null && env.PRIVATE_KEY != null }}
        run: |
          echo ${{ steps.generate_token.outputs.token }} | gh auth login --with-token
          gh auth setup-git

      - name: Format
        run: |
          terraform fmt -write=false -diff -check

      - name: Authenticate  # to access S3 bucket in init step
        uses: aws-actions/configure-aws-credentials@010d0da01d0b5a38af31e9c3470dbfdabdecca3a # v4.0.1
        with:
          role-to-assume: arn:aws:iam::${{ secrets.awsRootAccountId }}:role/AWS-GitHubActions-OIDC_role # FIX ROLE NAME role-to-assume: arn:aws:iam::${{secrets.AWS_ROOT_ACCOUNT_ID}}:role/github-actions-plan
          role-session-name: GitHubActions
          aws-region: eu-north-1

      - name: Init
        run: |
          terraform init -backend-config key=${{ github.event.repository.name }}/${{ inputs.moduleRootDirectory }} \
          -backend-config bucket=${{ secrets.s3StateBucket }} \
          -backend-config dynamodb_table=${{ secrets.s3StateBucket }}-lock #-compact-warnings

      - name: Validate
        env:
          GITHUB_APP_ID: ${{ secrets.GH_APP_ID }}   # TODO: only include these in the github root module
          GITHUB_APP_INSTALLATION_ID: ${{ secrets.GH_APP_INSTALLATION_ID }}
          GITHUB_APP_PEM_FILE: ${{ secrets.GH_APP_PEM_FILE }}
        run: |
          terraform validate -no-color

